package market;

import java.awt.Font;
import java.awt.GridLayout;
import java.util.List;
import java.util.Locale;
import javax.swing.Timer;
import mockstock.db.Portfolioproduct;
import mockstock.ejb.front.TraderTransactionRemote;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PiePlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.general.DefaultKeyedValues2DDataset;
import org.jfree.data.general.DefaultPieDataset;
import org.jfree.data.general.KeyedValues2DDataset;
import org.jfree.data.general.PieDataset;
import trader.UserGUI;

/**
 *
 * @author felmas
 */
public final class PortfolioAnalytics extends javax.swing.JFrame {

    private UserGUI parent;
    
    private String email;
    private TraderTransactionRemote traderBean;
    
    public PortfolioAnalytics(TraderTransactionRemote traderBean, String email, UserGUI parent) {
        this.traderBean = traderBean;
        this.email = email;
        this.parent = parent;
        initComponents();
        
        this.setTitle("Portfolio of " + email);
        this.setSize(500, 500);
        this.drawPortfolio();
    }
    
    public void drawPortfolio() {
        this.rootPane.removeAll();
        this.rootPane.setLayout(new GridLayout(2, 1));
        
        List<Portfolioproduct> portfolio = traderBean.getPortfolioproductsRemote(email);
        JFreeChart chart = ChartFactory.createPieChart("Portfolio Quantity Distribution",
                createPieDataSet(portfolio), true, true, false);
        PiePlot plot = (PiePlot) chart.getPlot();
        plot.setLabelFont(new Font("SansSerif", Font.PLAIN, 16));
        plot.setNoDataMessage("0.0");
        plot.setCircular(false);
        plot.setLabelGap(0.02);
        this.rootPane.add(new ChartPanel(chart));
        
        chart = ChartFactory.createStackedBarChart("Porfolio Price Distribution", 
                "Stock", "Price", createStackDataSet(portfolio), PlotOrientation.VERTICAL, 
                true, true, true);
        this.rootPane.add(new ChartPanel(chart));
        this.rootPane.updateUI();
        //this.rootPane.revalidate();
    }
    
    private KeyedValues2DDataset createStackDataSet(List<Portfolioproduct> portfolio) {
        DefaultKeyedValues2DDataset dataset = new DefaultKeyedValues2DDataset();
        for(Portfolioproduct p : portfolio) {
            dataset.addValue(p.getStockresult(), p.getStockresult()<0?"Harm":"Profit", 
                    p.getStockproduct().getName());
        }
        return dataset;
    }
    
    private PieDataset createPieDataSet(List<Portfolioproduct> portfolio) {
        DefaultPieDataset dataset = new DefaultPieDataset();
        for(Portfolioproduct p : portfolio) {
            dataset.setValue(p.getStockproduct().getName(), p.getQuantity());
        }
        return dataset;        
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        parent.closePortfolio();
    }//GEN-LAST:event_formWindowClosing

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
